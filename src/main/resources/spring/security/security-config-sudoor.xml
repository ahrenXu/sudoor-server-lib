<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  sudoor-server-lib
  %%
  Copyright (C) 2013 - 2014 Shark Xu
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as
  published by the Free Software Foundation, either version 2 of the
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/gpl-2.0.html>.
  #L%
  -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
	">
	
	<!--  -->
	<security:debug />

	<bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="defaultPermissionEvaluator" />
	</bean>
	
	<!-- for OPTIONS request (1, Add CORS header(this should move to filter due to ss will splite headers). 2, Block further process) -->
	<bean id="OPTIONSRequestMatcher" class="org.springframework.security.web.util.RegexRequestMatcher">
		<constructor-arg index="0" value=".*">
		</constructor-arg>
		<constructor-arg index="1" value="OPTIONS">
		</constructor-arg>
	</bean>



	<!-- for normall request -->
	<bean id="errorResponseCodeHandler" class="net.gplatform.sudoor.server.security.model.ResponseCodeHandler">
		<property name="responseCode" value="601" />
	</bean>

	<bean id="successResponseCodeHandler" class="net.gplatform.sudoor.server.security.model.ResponseCodeHandler">
		<property name="responseCode" value="204" />
	</bean>

	<bean id="401ResponseCodeHandler" class="net.gplatform.sudoor.server.security.model.ResponseCodeHandler">
		<property name="responseCode" value="401" />
	</bean>

	<!-- for ajax -->
	<security:http entry-point-ref="401ResponseCodeHandler" use-expressions="true" request-matcher="regex" pattern="/data/odata.svc/Credential.*">
		<security:intercept-url pattern="/data/odata.svc/Credential.*" method="GET" access="denyAll" />
		<security:intercept-url pattern=".*" access="permitAll" />
		<security:form-login authentication-failure-handler-ref="errorResponseCodeHandler" authentication-success-handler-ref="successResponseCodeHandler" />
		<security:remember-me />
		<security:csrf />
		<security:logout delete-cookies="JSESSIONID" success-handler-ref="successResponseCodeHandler" />
		<security:session-management>
			<security:concurrency-control max-sessions="1" />
		</security:session-management>
	</security:http>

	<!-- for form submision -->
	<security:http use-expressions="false" request-matcher="regex" pattern="/app/connect.*|/app/linkedin.*">
		<security:intercept-url pattern=".*" access="ROLE_USER" />
		<security:form-login />
		<security:remember-me />
		<security:csrf />
		<security:logout delete-cookies="JSESSIONID" />
		<security:session-management>
			<security:concurrency-control max-sessions="1" />
		</security:session-management>
	</security:http>
	
	<!-- Simpliest config for bypass requests  -->
	<security:http auto-config="true" use-expressions="true" request-matcher="regex"
		pattern="/index.html|/.*spring_security.*|/app/error|/app/web/.*|/app/sudoor/.*|/data/rest/sudoor/.*|/data/odata.svc/\$metadata|/data/odata.svc/\$batch">
		<security:intercept-url pattern=".*" access="permitAll" />
	</security:http>

	<!-- This can not be used in spring boot, since AuditListener audit will block it. Also none security is not recommended, since security filter not only do auth but also other security check e.g. csrf -->
	<!-- 
	<security:http
		pattern="/index.html|/app/error|/app/j_spring_security_.*|/app/web/.*|/data/odata.svc/\$metadata|/data/odata.svc/\$batch|/data/rest/SpringSecurity/.*|/data/rest/tools/.*"
		request-matcher="regex" security="none" />
	 -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>